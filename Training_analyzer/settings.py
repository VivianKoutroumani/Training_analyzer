"""
Django settings for Training_analyzer project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# Constructs paths inside the project in the following way: BASE_DIRECTORY / subdirectory.
BASE_DIR = Path(__file__).resolve().parent.parent

# These are the quick-start development settings. Note that such settings are unsuitable for production.
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/ for more information.

# SECURITY WARNING: Keep the secret key used in production actually secret!
SECRET_KEY = 'st*df9pclg)hd0g)8mfi$-4gw95%807cw#g868*s82a=g9x#bs'

# SECURITY WARNING: Don't run your program with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# The following code snippet defines all the applications that are installed in our Django project.
INSTALLED_APPS = [
    "blog.apps.BlogConfig",  # Adds the "blog" application to our Django framework.
    'users.apps.UsersConfig',  # Adds the "users" application to our Django framework.
    'crispy_forms',  # Adds the "crispy forms" module, which we use to add and update workouts.
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Training_analyzer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Training_analyzer.wsgi.application'

# The following code defines the type of databases we can create within our Django project. SQLite is sufficient for
# our purposes. See https://docs.djangoproject.com/en/3.1/ref/settings/#databases for more information.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR / 'db.sqlite3'),
    }
}

# Password Validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static Files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # defines base directory for profile pictures
MEDIA_URL = '/media/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'blog-overview'  # without Django directs to the profile of the user by default

LOGIN_URL = 'login'
